name: CI

on: [push]

jobs:
  Test:
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [windows-latest]
    
    steps:
    - uses: actions/checkout@v3
    
    #- uses: conda-incubator/setup-miniconda@v2
    #    python-version: ${{ matrix.python-version }}
     #   environment-file: envs/environment_dev.yaml
      #  activate-environment: hybridurb-dev
       # auto-activate-base: false
        
    #- name: Conda list
     # run: conda list
     
    - name: Pyton
      uses: actions/setup-python@v2
      with:
        python-version:  ${{ matrix.python-version }}

    - name: Poetry
      uses: Gr1N/setup-poetry@v8
      with:
        poetry-version: 1.4.0
      
    - name: Install Dependencies
      run: poetry install
        
    #- name: Test with pytest
    #  run: poetry run pytest

    - name: Autoformat code
      if: ${{ (matrix.os == 'windows-latest') && (matrix.python-version == 3.8) }}
      run: |
        poetry run isort .
        poetry run black .
        git config --global user.name '${{ github.actor }}'
        git config --global user.email '${{ github.actor }}@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout $GITHUB_HEAD_REF
        git commit -am "autoformat: isort & black" && git push || true
